import React, { useRef, useEffect, useState } from 'react';
import { Grid, html } from 'gridjs';
import { GridData } from '../../utils/data';
import "./vulnerability-report.scss";

function DataGrid({ reportUrl }) {
    let tableRef = useRef(null);

    const c = [
        "Resource",
        "Score",
        {
            name: "Severity",
            formatter: (_, row) => {
                if (row.cells[2]?.data != null) {
                    return html(`<span class='vulnerability-report vulnerability-report__sev_${row.cells[2]?.data.toLowerCase()}'>${row.cells[2].data}</span>`)
                }
            }
        },
        "Fixed Version",
        "Installed Version",
        {
            name: "CVE Record",
            formatter: (_, row) => {
                if (row.cells[5]?.data != null) {
                    const d = row.cells[5].data.split('/')
                    return html(`<a href='${row.cells[5].data}' target='_blank'>${d[d.length - 1].toUpperCase()}</a>`)
                }
            }
        },
        {
            name: "Vuln Age",
            formatter: (_, row) => {
                if (row.cells[6]?.data !== "") {
                    const ageInDays = (Date.now() - new Date(row.cells[6].data)) / (1000 * 3600 * 24)
                    if (ageInDays <= 365) {
                        return html(`<span>${Math.round(ageInDays)} days</span>`)
                    } else {
                        let monthDays = 30.44
                        return html(`<span>${Math.round(ageInDays / monthDays)} months</span>`)
                    }
                }
            }
        }
    ];

    const [grid] = useState(new Grid({
        columns: c,
        data: [],
        sort: true,
        search: true,
        pagination: {
            limit: 25,
            summary: false
        }
    }))

    useEffect(() => {
        if (tableRef.current.childNodes.length === 0) {
            grid.updateConfig({
                data: () => {
                    return GridData(reportUrl)
                },
            }).render(tableRef.current)
        }
        else {
            grid.updateConfig({
                data: () => {
                    return GridData(reportUrl)
                },
            }).forceRender()
        }
    }
    );

    return (
        <div className="vulnerability-report__wrapper" ref={tableRef} />
    );
}

export default DataGrid;